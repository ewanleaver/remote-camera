<!DOCTYPE HTML> 
<html lang="en"> 
	<head>
		<title>Generic WebApp</title>
	</head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8"> 
	<meta http-equiv="Content-Language" content="en-us"> 

	<link type="text/css" rel="stylesheet" href="css/style.css">

	<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script>
	<script type="text/javascript" src="https://skyway.io/dist/0.3/peer.js"></script>

	<script>
 	var SKYWAY_APIKEY = "4362638a-9e84-11e3-9939-47b360702393";

	// Connect to Skyway, have server assign an ID instead of providing one
	var peer = new Peer ({ key: SKYWAY_APIKEY }); // Skyway API key

	// Track all connections
	var connectedPeers = {};

	// Show this peer's ID.
	peer.on('open', function(id){
		console.log('My peer ID is: ' + id);
	  	$('#pid').text(id); // Instead assign it to HTML id pid
	});

	// Await connections from others
	peer.on('connection', connect); // Calls the connect function

	// Handle a connection object.
	function connect(c) {

	  // Handle a chat connection.
	  if (c.label === 'chat') {
	    var chatbox = $('<div></div>').addClass('connection').addClass('active').attr('id', c.peer);
	    var header = $('<h3></h3>').html('Chat with <strong>' + c.peer + '</strong>');
	    var messages = $('<div><em>  Peer connected.</em></div>').addClass('messages');
	    chatbox.append(header);
	    chatbox.append(messages);
	 
	    // Select connection handler.
	    chatbox.on('click', function() {
	      if ($(this).attr('class').indexOf('active') === -1) {
	        $(this).addClass('active');
	      } else {
	        $(this).removeClass('active');
	      }
	    });
	    $('.filler').hide();
	    $('#connections').append(chatbox);

	    c.on('data', function(data) {
	      messages.append('<div><span class="peer">  ' + c.peer + '</span>: ' + data +
	        '</div>');
	        });
	        c.on('close', function() {
	          alert('Peer ' + c.peer + ' has disconnected.');
	          chatbox.remove();
	          if ($('.connection').length === 0) {
	            $('.filler').show();
	          }
	          delete connectedPeers[c.peer];
	        });
	  } else if (c.label === 'file') {
	    c.on('data', function(data) {
	      // If we're getting a file, create a URL for it.
	      if (data.constructor === ArrayBuffer) {
	        var dataView = new Uint8Array(data);
	        var dataBlob = new Blob([dataView]);
	        var url = window.URL.createObjectURL(dataBlob);
	        $('#' + c.peer).find('.messages').append('<div><span class="file">' +
	            c.peer + ' has sent you a <a target="_blank" href="' + url + '">file</a>.</span></div>');
	      }
	    });
	  }
	}

	$(document).ready(function() {

	  // Connect to a peer
	  $('#connect').click(function() {
	    requestedPeer = $('#rid').val();
	    if (!connectedPeers[requestedPeer]) {
	      // Create 2 connections, one labelled chat and another labelled file.
	      var c = peer.connect(requestedPeer, {
	        label: 'chat',
	        serialization: 'none',
	        metadata: {message: 'hi i want to chat with you!'}
	      });
	      c.on('open', function() {
	        connect(c);
	      });
	      c.on('error', function(err) { alert(err); });
	      var f = peer.connect(requestedPeer, { label: 'file', reliable: true });
	      f.on('open', function() {
	        connect(f);
	      });
	      f.on('error', function(err) { alert(err); });
	    }
	    connectedPeers[requestedPeer] = 1;
	  });

	  // Close a connection.
	  $('#close').click(function() {
	    eachActiveConnection(function(c) {
	      c.close();
	    });
	  });

	  // Send a chat message to all active connections.
	  $('#send').submit(function(e) {
	    e.preventDefault();
	    // For each active connection, send the message.
	    var msg = $('#text').val();
	    eachActiveConnection(function(c, $c) {
	      if (c.label === 'chat') {
	        c.send(msg);
	        $c.find('.messages').append('<div><span class="you">  You: </span>' + msg
	          + '</div>');
	      }
	    });
	    $('#text').val('');
	    $('#text').focus();
	  });

	  // Goes through each active peer and calls FN on its connections.
	  function eachActiveConnection(fn) {
	    var actives = $('.active');
	    var checkedIds = {};
	    actives.each(function() {
	      var peerId = $(this).attr('id');

	      if (!checkedIds[peerId]) {
	        var conns = peer.connections[peerId];
	        for (var i = 0, ii = conns.length; i < ii; i += 1) {
	          var conn = conns[i];
	          fn(conn, $(this));
	        }
	      }

	      checkedIds[peerId] = 1;
	    });
	  }



	});

	</script>

	<body>

	  <div id="actions">
	    Your PeerJS ID is <span id="pid"></span><br>
	    Connect to a peer: <input type="text" id="rid" placeholder="Someone else's id"><input class="button" type="button" value="Connect" id="connect"><br><br>

	    <form id="send">
	      <input type="text" id="text" placeholder="Enter message"><input class="button" type="submit" value="Send to selected peers">
	    </form>
	    <button id="close">Close selected connections</button>
	  </div>

	  <div id="wrap"><div id="connections"><span class="filler">You have not yet
	        made any connections.</span></div>
	    <div class="clear"></div></div>

	</body>
</html>